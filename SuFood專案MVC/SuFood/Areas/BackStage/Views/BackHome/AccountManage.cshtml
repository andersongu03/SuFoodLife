@section Styles{
	<link href="~/css/accountmanagement.css" rel="stylesheet" />

}


<div class="account-container col-10" id="accountManagement">
	<div class="d-flex align-items-center justify-content-between mb-2">
		<h4>會員列表</h4>
	</div>

	<!-- 1.搜尋列 -->
	<div class="content">
		<div class="searchBar">
			<div class="inputWrapper">
				<i class='bx bx-search-alt-2 searchIcon'></i>
				<input type="text" class="inputSearch" v-model="searchText" placeholder="請輸入帳號、姓名">
			</div>
		</div>
	</div>

	<!-- 2.會員資料 -->
	<div class="table__container">
		<table>
			<thead>
				<tr>
					<th>會員ID</th>
					<th>帳號</th>
					<th>姓名</th>
					<th>手機號碼</th>
					<th>啟用狀態</th>
					<th>訂單</th>
					<th>編輯</th>
					<th>刪除</th>
					<th>創建時間</th>
					<th>最新登入時間</th>
				</tr>
			</thead>
			<tbody>
				<tr v-for="a in accountsInPage">
					<td>{{a.accountId}}</td>
					<td>{{a.account1}}</td>
					<td>{{a.firstName}}</td>
					<td>{{a.phone}}</td>
					<td>{{a.isActive}}</td>
					<td><i class='bx bx-file-find sortIcon orders-item' data-bs-toggle="modal" data-bs-target="#ordersModal" @@click="ordersConfirm(a)"></i></td>
					<td><i class='bx bx bxs-edit sortIcon edit-item' data-bs-toggle="modal" data-bs-target="#editModal" @@click="editConfirm(a)"></i></td>
					<td><i class='bx bx-trash sortIcon delete-item' data-bs-toggle="modal" data-bs-target="#deleteModal" @@click="deleteConfirm(a)"></i></td>
					<td>{{(a.createDatetime).slice(0,19)}}</td>
					<td>{{(a.lasttImeLogin).slice(0,19)}}</td>
				</tr>
			</tbody>
		</table>
	</div>

	<!-- 3.分頁 -->
	<div>
		<paginate :page-count="pageCount"
				  :click-handler="changePage"
				  :prev-text="'&laquo;'"
				  :next-text="'&raquo;'"
				  :page-class="'page-item'"
				  :page-link-class="'page-link'"
				  :prev-class="'page-item'"
				  :prev-link-class="'page-link'"
				  :next-class="'page-item'"
				  :next-link-class="'page-link'"
				  :container-class="'pagination justify-content-center'">
		</paginate>
	</div>


	<!--4.所有Modal-->
	<!-- OrdersModal -->
	<div class="modal fade" id="ordersModal" tabindex="-1" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="ordersModal">歷史訂單</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body" id="myorders_table">
					<!--內容-->
					<table>
						<thead>
							<tr>
								<th>訂單編號</th>
								<th>日期</th>
								<th>總金額</th>
								<th>付款狀態</th>
							</tr>
						</thead>
						<tbody>
							<tr v-for="item in vmOrders">
								<td>{{item.ordersId}}</td>
								<td>{{(item.setOrdersDatetime).slice(0,10)}}</td>
								<td>{{item.subTotal-item.subDiscount}}</td>
								<td>{{item.orderStatus}}</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	</div>

	<!-- EditModal -->
	<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="editModal">編輯資料</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<div class="mb-3 row">
						<label for="type" class="col-sm-2 col-form-label">姓名</label>
						<div class="col-sm-10">
							<input type="text" name="firstname" id="firstname" v-model="editAcc.firstName" required size="4">
						</div>
					</div>
					<div class="mb-3 row">
						<label for="price" class="col-sm-2 col-form-label">電話</label>
						<div class="col-sm-10">
							<input type="tel" class="form-control" id="phone" v-model="editAcc.phone" required size="10">
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
					<button type="button" class="btn btn-primary" @@click="editAccount">儲存</button>
				</div>
			</div>
		</div>
	</div>


	<!--5.刪除、編輯後的提示訊息-->
	@*	<div class="message-toast-wrapper" :class="toastHintStlye">
	<i v-if="toast=='新增成功' || toast=='修改成功'|| toast=='刪除成功'" class='bx bxs-check-circle message-toast-icon'></i>
	<i v-else class='bx bxs-x-circle message-toast-icon-error' style='color:#f00e0e'></i>
	<p class="message-toast-title">{{toast}}</p>
	</div>*@

</div>

@section Scripts{
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script src="https://unpkg.com/vuejs-paginate@0.9.0"></script>
	<script src="~/js/vue.js"></script>
	<script src="~/axios/axios.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

	<script>
		Vue.component('paginate', VuejsPaginate)

		const vm = new Vue({
			el: "#accountManagement",
			data: {
				searchText: "",
				cPage: "1",
				pageItems: "7",
				//toast: "",

				vmAccount: [],
				vmOrders: [],
				ordersAcc: {
					accountId: "",
					ordersId: "",
					date: "",
					total: "",
					discount: "",
					status: ""
				},
				delAcc: {
					accid: "",
					number: ""
				},
				editAcc: {
					accountId: 0,
					firstName: "",
					phone: ""
				},
				//toastHintStlye: {
				//	fadeInUp: false
				//},
			},
			mounted() {
				let _this = this;
				_this.getAccounts();
			},
			methods: {
				getAccounts: function () {
					let _this = this;
					axios.get(`/BackStage/AccountManagement/GetAllAccounts`).then(res => {
						//alert(JSON.stringify(res.data))
						_this.vmAccount = res.data;
					})
				},
				getOrders: function () {
					let _this = this;
					axios.get(`/BackStage/AccountManagement/GetOrdersByAccountId?accountId=${this.ordersAcc.accountId}`).then(res => {
						//alert(JSON.stringify(res.data))
						_this.vmOrders = res.data;
					})
				},
				editAccount: function () {
					let _this = this;
					var request = {
						AccountId: this.editAcc.accountId,
						FirstName: this.editAcc.firstName,
						LastName: this.editAcc.lastName,
						Phone: this.editAcc.phone
					};
					axios.post(`/BackStage/AccountManagement/EditAccounts`, request).then(res => {
						$("#editModal").modal('hide');
						_this.getAccounts();
						//_this.toast = "修改成功";
						//_this.toastHint();
					});

				},
				ordersConfirm: function (a) {
					this.ordersAcc.accountId = a.accountId;
					this.ordersAcc.ordersId = a.ordersId;
					this.ordersAcc.date = a.setOrdersDatetime;
					this.ordersAcc.total = a.subTotal;
					this.ordersAcc.discount = a.subDiscount;
					this.ordersAcc.status = a.orderStatus;
					this.getOrders();
				},
				editConfirm: function (a) {
					this.editAcc.accountId = a.accountId;
					this.editAcc.firstName = a.firstName;
					this.editAcc.lastName = a.lastName;
					this.editAcc.phone = a.phone;
				},
				deleteConfirm: function (a) {
					this.delAcc.accid = a.accountId;
					let number = a.account1;
					let _this = this;
					Swal.fire({
						title: '您是否要刪除此帳號？',
						text: `${number}`,
						icon: 'warning',
						showCancelButton: true,
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
						confirmButtonText: 'Yes, delete it!'
					}).then((result) => {
						if (result.isConfirmed) {
							axios.delete(`/backstage/accountmanagement/deleteaccounts/${this.delAcc.accid}`).then(res => {
								Swal.fire(
									'Deleted Success!',
									
								)
								_this.getAccounts();
							});
						}
					})
				},
				changePage: function (currentpage) {
					console.log(currentpage);
					this.cPage = currentpage;
				},
				//toastHint: function () {
				//	this.toastHintStlye.fadeInUp = true;
				//	setTimeout(() => {
				//		this.toastHintStlye.fadeInUp = false
				//	}, 2100)
				//}
			},
			computed: {
				pageCount: function () {
					return Math.ceil(this.filterSearchText.length / this.pageItems);
					//return Math.ceil(this.vmAccount.length / this.pageItems);
				},
				accountsInPage: function () {
					var max = this.cPage * this.pageItems;
					var min = this.pageItems * (this.cPage - 1) + 1;
					return this.filterSearchText.slice(min - 1, max)
					//return this.vmAccount.slice(min - 1, max)
				},
				//篩選帳號、姓名
				filterSearchText: function () {
					return this.vmAccount.filter((x) => {
						return x.account1.indexOf(this.searchText) !== -1 || x.firstName.indexOf(this.searchText) !== -1;
					})

				},
			}
		})
	</script>
}