@section Styles{
	<link href="~/css/ordersmanage.css" rel="stylesheet" />
	<style>
		.general_order_table {
			border-bottom: 1px solid;
			background: gray;
			color: #fff;
			font-weight: bold;
		}

		#ordersDetailModal {
			color: rgb(242 191 15);
			font-weight: bold;
		}

		.modal-header #recyledetailsModal {
			color: rgb(248 119 17);
			font-weight: bold;
		}

		.time-button {
			border:none;
			display: inline-block;
			background-color: hsl(120, 100%, 25%);
			color: #fff;
			padding: 1rem 1.25rem;
			border-radius: .5rem;
			transition: .3s;
			width: 20%;
			height: 20%;
			box-shadow: 0 2px 4px rgba(0, 0, 0, .3);
		}

	</style>
}


<div class="orders-container col-10" id="ordersManagement">
	<div class="d-flex align-items-center justify-content-between mb-2">
		<h4>訂單列表</h4>
	</div>



	<!-- 1.搜尋列 -->
	<div class="row mb-3">
		<div class="col-3">
			<div class="searchBar">
				<div class="inputWrapper">
					<i class='bx bx-search-alt-2 searchIcon'></i>
					<input type="text" class="inputSearch" v-model="searchText" placeholder="訂單編號、ID">
				</div>
			</div>
		</div>

		<div class="col-2">
			<div class="content">
				<div class="StatusBar">
					<select v-model="selectedMethod">
						<option value="method">訂購方案</option>
						<option value="retail">零售</option>
						<option value="freechoice">自由選</option>
						<option value="recyle">幫你選</option>
					</select>
				</div>
			</div>
		</div>

		<div class="col-2">
			<div class="content">
				<div class="StatusBar">
					<select v-model="selectedStatus">
						<option value="status">付款狀態</option>
						<option value="unpaid">未付款</option>
						<option value="paid">已付款</option>
						<option value="canceled">已取消</option>
					</select>
				</div>
			</div>
		</div>

		<div class="col-5">
			<div class="content">
				<div class="date-picker">
					<input id="start-date" type="date" v-model="startDate">
					<input id="end-date" type="date" v-model="endDate">
					<button class="time-button" type="button" @@click="search">搜尋</button>
				</div>
			</div>
		</div>
	</div>

	<!-- 2.訂單-->
	<div class="general-order">
		<table class="table table-hover">
			<thead>
				<tr class="tr">
					<th scope="col">訂單編號</th>
					<th scope="col">會員ID</th>
					<th scope="col">訂購方案</th>
					<th scope="col">付款狀態</th>
					<th scope="col">訂單明細</th>
					<th scope="col">總金額</th>
					<th scope="col">成立時間</th>
					<th scope="col">評論</th>
					<th scope="col">收件資訊</th>
					<th scope="col">刪除</th>
				</tr>
			</thead>
			<tbody>
				<template v-if="filteredOrdersTime.length > 0">
					<tr v-for="o in filteredOrdersTime">
						<td>{{o.ordersId}}</td>
						<td>{{o.accountId}}</td>
						<td>{{o.buyMethod}}</td>
						<td>{{o.orderStatus}}</td>
						<td><i class='bx bx-file-find sortIcon orders-item' data-bs-toggle="modal" data-bs-target="#ordersModal" @@click="ordersConfirm(o)"></i></td>
						<td>{{(o.subTotal)-(o.subDiscount)}}</td>
						<td>{{(o.setOrdersDatetime).split("T").join(" ").slice(0,19)}}</td>
						<td><button type="button" class="btn btn-secondary" @@click="goComment(o.ordersId)">回覆</button></td>
						<td><i class='bx bx bxs-edit sortIcon edit-item' data-bs-toggle="modal" data-bs-target="#editModal" @@click="editConfirm(o)"></i></td>
						<td><i class='bx bx-trash sortIcon delete-item' @@click="deleteConfirm(o)"></i></td>
					</tr>
				</template>
				<template v-else>
					<tr v-for="o in ordersInPage">
						<td>{{o.ordersId}}</td>
						<td>{{o.accountId}}</td>
						<td>{{o.buyMethod}}</td>
						<td>{{o.orderStatus}}</td>
						<td><i class='bx bx-file-find sortIcon orders-item' data-bs-toggle="modal" data-bs-target="#ordersModal" @@click="ordersConfirm(o)"></i></td>
						<td>{{(o.subTotal)-(o.subDiscount)}}</td>
						<td>{{ o.setOrdersDatetime.split("T").join(" ").slice(0,19)}}</td>
						<td><button type="button" class="btn btn-secondary" @@click="goComment(o.ordersId)">回覆</button></td>
						<td><i class='bx bx bxs-edit sortIcon edit-item' data-bs-toggle="modal" data-bs-target="#editModal" @@click="editConfirm(o)"></i></td>
						<td><i class='bx bx-trash sortIcon delete-item' @@click="deleteConfirm(o)"></i></td>
					</tr>
				</template>
			</tbody>
		</table>
	</div>

	<!-- 3.分頁 -->
	<div>
		<paginate :page-count="pageCount"
				  :click-handler="changePage"
				  :prev-text="'&laquo;'"
				  :next-text="'&raquo;'"
				  :page-class="'page-item'"
				  :page-link-class="'page-link'"
				  :prev-class="'page-item'"
				  :prev-link-class="'page-link'"
				  :next-class="'page-item'"
				  :next-link-class="'page-link'"
				  :container-class="'pagination justify-content-center'">
		</paginate>
	</div>

	<!-- 4.所有Modal -->
	<!-- OrdersDetailModal -->
	<div class="modal fade" id="ordersModal" tabindex="-1" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="ordersDetailModal">訂單明細編號{{orderDetailsId}}</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body" id="myorders_table">
					<!--內容-->
					<template v-if="buyMethod == '幫你選'">
						<table v-for="item in vmRecyleOrders">
							<thead>
								<tr class="general_order_table">
									<th>&nbsp;&nbsp;&nbsp;配送序號&nbsp;&nbsp;</th>
									<th>&nbsp;&nbsp;&nbsp;配送日期&nbsp;&nbsp;</th>
									<th>&nbsp;&nbsp;&nbsp;配送狀態&nbsp;&nbsp;</th>
									<th>&nbsp;&nbsp;&nbsp;訂單明細&nbsp;&nbsp;</th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{item.reSubOrdersId}}&nbsp;&nbsp;</td>
									<td>&nbsp;&nbsp;&nbsp;{{(item.shipDate).slice(0,10)}}&nbsp;&nbsp;</td>
									<td>&nbsp;&nbsp;&nbsp;{{item.shipStatus}}&nbsp;&nbsp;</td>
									<td>&nbsp;&nbsp;&nbsp;<button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#recyledetailsModal" @@click="getRecyleDetails(item.reSubOrdersId)">檢視</button></td>
								</tr>
							</tbody>
						</table>

					</template>
					<template v-else>
						<table>
							<thead>
								<tr class="general_order_table">
									<th>商品名稱&nbsp;</th>
									<th>&nbsp;單價&nbsp;</th>
									<th>&nbsp;數量&nbsp;</th>
									<th>&nbsp;小計&nbsp;</th>
								</tr>
							</thead>
							<tbody>
								<tr v-for="item in vmDetails">
									<td>{{item.productName}}&nbsp;</td>
									<td>&nbsp;{{item.unitPrice}}&nbsp;</td>
									<td>&nbsp;{{item.quantity}}&nbsp;</td>
									<td>&nbsp;{{(item.unitPrice)*(item.quantity)}}&nbsp;</td>
								</tr>
								<tr class="general_order_table">
									<th>優惠券ID&nbsp;</th>
									<th>&nbsp;折扣&nbsp;</th>
									<th>&nbsp;總計&nbsp;</th>
								</tr>
								<tr>
									<td>{{couponId}}&nbsp;</td>
									<td>&nbsp;{{subDiscount}}&nbsp;</td>
									<td>&nbsp;{{(subTotal)-(subDiscount)}}&nbsp;</td>
								</tr>
							</tbody>
						</table>
					</template>


					<label class="general_order_table">備註：</label><br>
					<textarea>{{reMark}}</textarea>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	</div>

	<!-- RecyleOrdersDetailModal -->
	<div class="modal fade" id="recyledetailsModal" tabindex="-1" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="recyledetailsModal">幫你選_訂單明細編號0{{reSubOrdersId}}</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body" id="myorders_table">
					<!--內容-->
					<table>
						<thead>
							<tr class="general_order_table">
								<th>&nbsp;&nbsp;&nbsp;商品名稱&nbsp;&nbsp;&nbsp;</th>
								<th>&nbsp;&nbsp;&nbsp;數量&nbsp;&nbsp;&nbsp;</th>
							</tr>
						</thead>
						<tbody>
							<tr v-for="p in vmRecyleDetails">
								<td>&nbsp;&nbsp;&nbsp;{{p.productName}}&nbsp;&nbsp;&nbsp;</td>
								<td>&nbsp;&nbsp;&nbsp;{{p.quantity}}&nbsp;&nbsp;&nbsp;</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	</div>

	<!-- EditModal -->
	<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="editModal">編輯資料</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<div class="mb-3 row">
						<label for="type" class="col-sm-2 col-form-label">姓名</label>
						<div class="col-sm-10">
							<input type="text" name="name" id="name" v-model="editProfile.name" required size="10">
						</div>
					</div>
					<div class="mb-3 row">
						<label for="price" class="col-sm-2 col-form-label">電話</label>
						<div class="col-sm-10">
							<input type="tel" class="form-control" id="phone" v-model="editProfile.phone" required size="10">
						</div>
					</div>
					<div class="mb-3 row">
						<label for="price" class="col-sm-2 col-form-label">地址</label>
						<div class="col-sm-10">
							<input type="text" class="form-control" id="address" v-model="editProfile.address" required>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
					<button type="button" class="btn btn-primary" @@click="editInfo">儲存</button>
				</div>
			</div>
		</div>
	</div>


</div>

@section Scripts{


	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script src="https://unpkg.com/vuejs-paginate@0.9.0"></script>
	<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
	<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


	<script>
		Vue.component('paginate', VuejsPaginate)

		const vm = new Vue({
			el: "#ordersManagement",
			data: {
				searchText: "",
				cPage: "1",
				pageItems: "7",

				vmOrders: [],
				vmDetails: [],
				vmRecyleOrders: [],
				vmRecyleDetails: [],
				filteredOrdersTime: [],

				ordersDetail: {
					ordersId: 0,
					productName: "",
					unitPrice: 0,
					quantity: 0,
					subTotal: 0,
					couponId: 0,
					subDiscount: 0,
					total: 0
				},
				recyleOrders: {
					ordersId: 0,
					reSubOrdersId: 0
				},
				recyleOrderDetails: {
					reSubOrdersId: 0
				},
				editProfile: {
					ordersId: 0,
					name: "",
					phone: "",
					address: ""
				},
				delOrders: {
					ordersId: 0,
					buyMethod: ""
				},
				selectedMethod: "method",
				selectedStatus: "status",
				orderDetailsId: 0,
				subTotal: 0,
				subDiscount: 0,
				couponId: 0,
				reMark: "",
				buyMethod: "",
				reSubOrdersId: 0,
				startDate: "",
				endDate: ""


			},
			mounted() {
				let _this = this;
				_this.getOrders();
				_this.getOrdersDetails();
				_this.getRecyleOrders();
				_this.getRecyleDetails();
			},
			created() {
				var today = new Date().toISOString().substr(0, 10);
				this.endDate = today; // 設置結束日期為當日日期
			},
			methods: {
				getOrders: function () {
					let _this = this;
					axios.get(`/BackStage/OrdersManagement/GetAllOrders`).then(res => {
						//alert(JSON.stringify(res.data))
						_this.vmOrders = res.data;
					})
				},
				getOrdersDetails: function () {
					let _this = this;
					axios.get(`/BackStage/OrdersManagement/GetOrdersDetails?orderId=${this.ordersDetail.ordersId}`).then(res => {
						//alert(JSON.stringify(res.data))
						_this.vmDetails = res.data;
						_this.orderDetailsId = vm.vmDetails.length != 0 ? _this.vmDetails[0].ordersDetailsId : undefined;
						_this.reSubOrdersId = vm.vmRecyleOrders.length != 0 ? _this.vmRecyleOrders[0].reSubOrdersId : undefined;
					})
				},
				getRecyleOrders: function () {
					let _this = this;
					axios.get(`/BackStage/OrdersManagement/GetRecyleOrders?orderId=${this.recyleOrders.ordersId}`).then(res => {
						//alert(JSON.stringify(res.data))
						_this.vmRecyleOrders = res.data;
					})
				},
				getRecyleDetails: function (reSubOrdersId) {
					let _this = this;
					this.reSubOrdersId = reSubOrdersId;
					axios.get(`/BackStage/OrdersManagement/GetRecyleOD?ReSubOrdersId=${reSubOrdersId}`).then(res => {
						//alert(JSON.stringify(res.data))
						_this.vmRecyleDetails = res.data;
					})
				},
				editInfo: function () {
					let _this = this;
					var request = {
						OrdersId: this.editProfile.ordersId,
						Name: this.editProfile.name,
						Phone: this.editProfile.phone,
						ShipAddress: this.editProfile.address
					};
					axios.post(`/BackStage/OrdersManagement/EditRecipientInfo`, request).then(res => {
						$("#editModal").modal('hide');
						_this.getOrders();
					});
				},
				deleteOrder: function (o) { //幫你選的訂單無法刪
					let _this = this;

					if (this.buyMethod == '幫你選') {
						//${this.delOrders.ordersId}
						axios.post(`/BackStage/OrdersManagement/DeleteRecyleOrders?orderId=14`)
							.then(res => {
								$("#deleteModal").modal("hide");
							});
					}
					else {
						axios.delete(`/backstage/OrdersManagement/DeleteOrders?orderId=${this.delOrders.ordersId}`).then(res => {
							$("#deleteModal").modal("hide");
						});

					}
					_this.getOrders();
				},
				recyleDetailsConfirm: function (reSubOrdersId) {
					this.reSubOrdersId = reSubOrdersId;
				},
				ordersConfirm: function (o) {
					this.buyMethod = o.buyMethod;
					if (this.buyMethod == '幫你選') {
						this.recyleOrders.ordersId = o.ordersId;
						this.getRecyleOrders();
					}
					else {
						this.ordersDetail.ordersId = o.ordersId;
						this.subTotal = o.subTotal;
						this.subDiscount = o.subDiscount;
						this.couponId = o.couponId;
						this.reMark = o.reMark;
						this.getOrdersDetails();
					}
				},
				editConfirm: function (o) {
					this.editProfile.ordersId = o.ordersId;
					this.editProfile.name = o.name;
					this.editProfile.phone = o.phone;
					this.editProfile.address = o.shipAddress;
					this.getOrders(o.ordersId);
				},
				deleteConfirm: function (o) {
					let ordersId = o.ordersId;
					this.buyMethod = o.buyMethod;
					let _this = this;
					Swal.fire({
						title: `您是否要刪除編號${ordersId}的訂單？`,
						icon: 'warning',
						showCancelButton: true,
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
						confirmButtonText: 'Yes, delete it!'
					}).then((result) => {
						if (result.isConfirmed) {
							axios.delete(`/backstage/OrdersManagement/DeleteOrders?orderId=${ordersId}`).then(res => {
								Swal.fire(
									'Deleted!',
									'Your Order has been deleted.',
									'success'
								)
								_this.getOrders();
							});
						}

					})
				},
				changePage: function (currentpage) {
					console.log(currentpage);
					this.cPage = currentpage;
				},
				goComment: function (ordersId) {
					window.location.href = "/BackStage/BackHome/CommentManagement?ordersId=" + ordersId;
				},
				search: function () {
					if (this.endDate < this.startDate) {
						alert("結束日期不得小於開始日期");
						return;
					}


					var date = new Date(this.endDate);
					date.setDate(date.getDate() + 1); // 取得隔天日期
					var nextDay = date.toISOString().split('T')[0]; // 轉換為 'yyyy-MM-dd' 格式

					this.filteredOrdersTime = this.vmOrders.filter((order) => {
						return order.setOrdersDatetime >= this.startDate && order.setOrdersDatetime < nextDay;
					});

					// 在這裡處理篩選後的訂單資料
					//console.log(this.startDate);
					//console.log(this.endDate);
					//console.log(this.filteredOrdersTime);
				}

			},
			computed: {
				pageCount: function () {
					return Math.ceil(this.filterSearchText.length / this.pageItems);
					//return Math.ceil(this.vmOrders.length / this.pageItems);
				},
				ordersInPage: function () {
					var max = this.cPage * this.pageItems;
					var min = this.pageItems * (this.cPage - 1) + 1;
					return this.filterSearchText.slice(min - 1, max);
					//return this.vmOrders.slice(min - 1, max)
				},
				//篩選訂單編號、會員ID
				filterSearchText: function () {
					arr = this.vmOrders.filter((o) => {
						return o.ordersId.toString().includes(this.searchText)
					})
					//用購買方案篩選
					switch (this.selectedMethod) {
						case "訂購方案":
							break;
						case "retail":
							arr = arr.filter(o => {
								return o.buyMethod == "零售"
							})
							break;
						case "freechoice":
							arr = arr.filter(o => {
								return o.buyMethod == "自由選"
							})
							break;
						case "recyle":
							arr = arr.filter(o => {
								return o.buyMethod == "幫你選"
							})
					}
					//用付款狀態篩選
					switch (this.selectedStatus) {
						case "status":
							break;
						case "unpaid":
							arr = arr.filter(o => {
								return o.orderStatus == "未付款"
							})
							break;
						case "paid":
							arr = arr.filter(o => {
								return o.orderStatus == "已付款"
							})
							break;
						case "canceled":
							arr = arr.filter(o => {
								return o.orderStatus == "已取消"
							})
							break;
					}

					return arr;
				},

			}

		})
	</script>
}
