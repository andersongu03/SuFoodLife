@section Styles{
    <style>
        .app {
            display: flex;
            flex-direction: row;
            justify-content: center;
            align-items: flex-start;
            height: 100%;
            margin-top: 10%;
            gap: 15px;
        }

        .left {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: 15px;
        }

        .right {
            align-items: flex-start;
            gap: 15px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th {
            width: 180px;
        }

        .btn {
            display: block;
            margin: 0 auto;
        }
    </style>

}
<div class="app">
    <div class="left">
        <div>
            <select class="form-select form-select-sm" aria-label=".form-select-sm example" v-model="helpOrder2Back.OrderTotalPay" required>
                <option selected>請輸入你每次配送的預算</option>
                <option value="200">200</option>
                <option value="300">300</option>
                <option value="500">500</option>
            </select>
        </div>
        <div>
            <select class="form-select form-select-sm" aria-label=".form-select-sm example" v-model="helpOrder2Back.TimeRange" required>
                <option selected>請輸入您想訂閱的時間</option>
                <option value="3">3個月</option>
                <option value="2">2個月</option>
                <option value="1">1個月</option>
            </select>
        </div>
        <div>
            <select class="form-select form-select-sm" aria-label=".form-select-sm example" v-model="helpOrder2Back.OrderFrequency" required>
                <option selected>請輸入您配送的頻率</option>
                <option value="1">一周一次</option>
                <option value="2">兩周一次</option>
                <option value="4">一個月一次</option>
            </select>
        </div>
        <div>
            <label for="start">請輸入訂購起始日</label>
            <input type="date" id="start" name="trip-start" :min="setStartDate" value="" v-model="helpOrder2Back.StartOrderDate"  required>
        </div>
    </div>
    <div class="right">
        <div>

            <table class="table">
                <thead>
                    <tr>
                        <th scope="col"></th>
                        <th scope="col">商品圖片</th>
                        <th scope="col">商品名稱</th>
                        <th scope="col">請淘汰你想淘汰的商品</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="h in helpList">
                        <th scope="row">{{h.productId}}</th>
                        <td><img :src="'data:image/png;base64,'+h.img" alt="零售商品圖片" style="width:200px; height:250px" /></td>
                        <td>{{ h.productName }}</td>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="flexCheckDefault"  @@click="SeeUProductName(h.ProductName)">
                                <label class="form-check-label" for="flexCheckDefault">
                                    淘汰
                                </label>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div>
            <button type="button" class="btn btn-danger" @@click="createHelpOrder">送出訂單</button>
        </div>
    </div>

</div>

@section Scripts {
    <script>
        const helpUChioce = new Vue({
            el: ".app",
            data: {
                helpList: [],

                helpOrder2Back: {
                    TimeRange: null,
                    OrderFrequency: null,
                    OrderTotalPay: null,
                    StartOrderDate: null,
                    UserChioce: [],
                },
            },
            methods: {
                GetHelpList: function () {
                    let _this = this;
                    axios.get("/HelpUChioce/GetHelpProduct").then(response => {
                        this.helpList = response.data;
                        console.log(this.helpList);
                        this.helpOrder2Back.UserChioce = this.helpList.map(x => ({ ProductName: x.productName }));
                    }).catch(error => {
                        console.log(error);
                    });
                },
                createHelpOrder: function () {
                    axios.post("/HelpUChioce/CreateHelpOrder", this.helpOrder2Back).then(response => {
                        if (response.data) {
                            window.location.href = "/CheckOut/HelpUChioce2Order"
                        } else {
                            alert('你還沒登入哦')
                        }
                    })
                },
                SeeUProductName: function (name) {
                    let existingItem = this.helpOrder2Back.UserChioce.find(item => item.ProductName === name);
                    if (existingItem) {
                        let index = this.helpOrder2Back.UserChioce.indexOf(existingItem);
                        this.helpOrder2Back.UserChioce.splice(index, 1);
                    } else {
                        this.helpOrder2Back.UserChioce.push({ ProductName: name });
                    }
                },
            },
            computed: {
                setStartDate: function () {
                    const currentDate = new Date();
                    currentDate.setDate(currentDate.getDate() + 7);
                    const year = currentDate.getFullYear();
                    const month = String(currentDate.getMonth() + 1).padStart(2, '0');
                    const day = String(currentDate.getDate()).padStart(2, '0');

                    return `${year}-${month}-${day}`;
                },
                //start: function () {
                //    return this.helpOrder2Back.UserChioce = this.helpList.map(x => ({ ProductName: x.productName }));
                //},
            },
            mounted() {
                this.GetHelpList();
            }

        })
    </script>
}
